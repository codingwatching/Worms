//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/Main.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MainInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MainInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Main"",
    ""maps"": [
        {
            ""name"": ""Main"",
            ""id"": ""3fb7eff6-c1c7-4dea-b7a8-a34f5909b57b"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""893c99f1-37e3-421b-a089-a86179152cae"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RaiseScope"",
                    ""type"": ""Value"",
                    ""id"": ""2cabf696-7493-4956-b05b-034942146220"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TurnLeft"",
                    ""type"": ""Button"",
                    ""id"": ""a34912f9-2df5-44ae-b0f4-f7fb81ce7a9c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TurnRight"",
                    ""type"": ""Button"",
                    ""id"": ""9835e22a-1dd2-4e24-8b01-05414da0d08f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DontMove"",
                    ""type"": ""Button"",
                    ""id"": ""9b873681-f3c2-4b99-bdb0-04d114fca739"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LongJump"",
                    ""type"": ""Button"",
                    ""id"": ""4a574c5d-d16f-431c-9a6c-9efeb33abc4a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HighJump"",
                    ""type"": ""Button"",
                    ""id"": ""a8beeea5-0d31-45fe-8a03-f1e901bd242a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EnablePointerLine"",
                    ""type"": ""Button"",
                    ""id"": ""ddec274d-7736-4ba1-a0ed-5a25f8c4fe9c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IncreaseShotPower"",
                    ""type"": ""Button"",
                    ""id"": ""3ea45bfa-a586-4276-97d7-2e2d6a922da0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""f368437f-7ef7-4141-9474-8d087d84aabd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""d590c205-7637-4d84-8b6f-76f274604693"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""45ee9d2f-19c9-4580-9436-80d2d657929b"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""7e5a5d97-08e5-46ff-8899-588a3704cab3"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis AD"",
                    ""id"": ""147caf8b-d427-452c-88af-8c021a961f4c"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""1f32228e-66e0-4a8c-b2f9-3d818b1bb618"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""026a6c79-64fa-4051-8beb-dc51abc2dcc8"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""e307078c-cf86-43f2-ac51-79ec8949ac9c"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RaiseScope"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""816c4701-ffda-424c-aa55-6d708551515a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RaiseScope"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2fa1ebe4-8d3f-4cd2-aa6b-820abf3416c8"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RaiseScope"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""b01d6f7b-dc43-4455-b681-2f87eb2dc46b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RaiseScope"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a5c85939-8eb1-46f4-b6a6-5d08b1c6b12c"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RaiseScope"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2bda6e35-2a1a-4dfd-92b5-0e5209ad74a2"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RaiseScope"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""68fdf659-7cc4-4282-8391-6b3fd04be888"",
                    ""path"": ""OneModifier"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnLeft"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""319e7209-1181-4e32-8186-fad64f9faf57"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""0634405f-c077-47dc-94f4-51704448d555"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""cd439750-bdc2-49b7-b1f4-346fc553c145"",
                    ""path"": ""OneModifier"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnRight"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""90da8c23-6de6-414f-938c-18fa041d5c4f"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""4033f28f-f934-408c-950a-49837f3023e8"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TurnRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c9f70397-d9f4-4a4a-b035-e7a61ab9c19b"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DontMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9dd76cb7-c31b-463b-ab6b-9c49d2d25390"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LongJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78c4e5bd-b488-4af8-9e29-9b3295e5ad1e"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HighJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57efd260-928c-4834-b583-b45b68f1821c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnablePointerLine"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d197329-b7fd-4467-bdfe-42eee142abac"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IncreaseShotPower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""914e4e10-3c0e-4268-a828-5a235741bf11"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Main
        m_Main = asset.FindActionMap("Main", throwIfNotFound: true);
        m_Main_Move = m_Main.FindAction("Move", throwIfNotFound: true);
        m_Main_RaiseScope = m_Main.FindAction("RaiseScope", throwIfNotFound: true);
        m_Main_TurnLeft = m_Main.FindAction("TurnLeft", throwIfNotFound: true);
        m_Main_TurnRight = m_Main.FindAction("TurnRight", throwIfNotFound: true);
        m_Main_DontMove = m_Main.FindAction("DontMove", throwIfNotFound: true);
        m_Main_LongJump = m_Main.FindAction("LongJump", throwIfNotFound: true);
        m_Main_HighJump = m_Main.FindAction("HighJump", throwIfNotFound: true);
        m_Main_EnablePointerLine = m_Main.FindAction("EnablePointerLine", throwIfNotFound: true);
        m_Main_IncreaseShotPower = m_Main.FindAction("IncreaseShotPower", throwIfNotFound: true);
        m_Main_Shoot = m_Main.FindAction("Shoot", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Main
    private readonly InputActionMap m_Main;
    private List<IMainActions> m_MainActionsCallbackInterfaces = new List<IMainActions>();
    private readonly InputAction m_Main_Move;
    private readonly InputAction m_Main_RaiseScope;
    private readonly InputAction m_Main_TurnLeft;
    private readonly InputAction m_Main_TurnRight;
    private readonly InputAction m_Main_DontMove;
    private readonly InputAction m_Main_LongJump;
    private readonly InputAction m_Main_HighJump;
    private readonly InputAction m_Main_EnablePointerLine;
    private readonly InputAction m_Main_IncreaseShotPower;
    private readonly InputAction m_Main_Shoot;
    public struct MainActions
    {
        private @MainInput m_Wrapper;
        public MainActions(@MainInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Main_Move;
        public InputAction @RaiseScope => m_Wrapper.m_Main_RaiseScope;
        public InputAction @TurnLeft => m_Wrapper.m_Main_TurnLeft;
        public InputAction @TurnRight => m_Wrapper.m_Main_TurnRight;
        public InputAction @DontMove => m_Wrapper.m_Main_DontMove;
        public InputAction @LongJump => m_Wrapper.m_Main_LongJump;
        public InputAction @HighJump => m_Wrapper.m_Main_HighJump;
        public InputAction @EnablePointerLine => m_Wrapper.m_Main_EnablePointerLine;
        public InputAction @IncreaseShotPower => m_Wrapper.m_Main_IncreaseShotPower;
        public InputAction @Shoot => m_Wrapper.m_Main_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_Main; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
        public void AddCallbacks(IMainActions instance)
        {
            if (instance == null || m_Wrapper.m_MainActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MainActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @RaiseScope.started += instance.OnRaiseScope;
            @RaiseScope.performed += instance.OnRaiseScope;
            @RaiseScope.canceled += instance.OnRaiseScope;
            @TurnLeft.started += instance.OnTurnLeft;
            @TurnLeft.performed += instance.OnTurnLeft;
            @TurnLeft.canceled += instance.OnTurnLeft;
            @TurnRight.started += instance.OnTurnRight;
            @TurnRight.performed += instance.OnTurnRight;
            @TurnRight.canceled += instance.OnTurnRight;
            @DontMove.started += instance.OnDontMove;
            @DontMove.performed += instance.OnDontMove;
            @DontMove.canceled += instance.OnDontMove;
            @LongJump.started += instance.OnLongJump;
            @LongJump.performed += instance.OnLongJump;
            @LongJump.canceled += instance.OnLongJump;
            @HighJump.started += instance.OnHighJump;
            @HighJump.performed += instance.OnHighJump;
            @HighJump.canceled += instance.OnHighJump;
            @EnablePointerLine.started += instance.OnEnablePointerLine;
            @EnablePointerLine.performed += instance.OnEnablePointerLine;
            @EnablePointerLine.canceled += instance.OnEnablePointerLine;
            @IncreaseShotPower.started += instance.OnIncreaseShotPower;
            @IncreaseShotPower.performed += instance.OnIncreaseShotPower;
            @IncreaseShotPower.canceled += instance.OnIncreaseShotPower;
            @Shoot.started += instance.OnShoot;
            @Shoot.performed += instance.OnShoot;
            @Shoot.canceled += instance.OnShoot;
        }

        private void UnregisterCallbacks(IMainActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @RaiseScope.started -= instance.OnRaiseScope;
            @RaiseScope.performed -= instance.OnRaiseScope;
            @RaiseScope.canceled -= instance.OnRaiseScope;
            @TurnLeft.started -= instance.OnTurnLeft;
            @TurnLeft.performed -= instance.OnTurnLeft;
            @TurnLeft.canceled -= instance.OnTurnLeft;
            @TurnRight.started -= instance.OnTurnRight;
            @TurnRight.performed -= instance.OnTurnRight;
            @TurnRight.canceled -= instance.OnTurnRight;
            @DontMove.started -= instance.OnDontMove;
            @DontMove.performed -= instance.OnDontMove;
            @DontMove.canceled -= instance.OnDontMove;
            @LongJump.started -= instance.OnLongJump;
            @LongJump.performed -= instance.OnLongJump;
            @LongJump.canceled -= instance.OnLongJump;
            @HighJump.started -= instance.OnHighJump;
            @HighJump.performed -= instance.OnHighJump;
            @HighJump.canceled -= instance.OnHighJump;
            @EnablePointerLine.started -= instance.OnEnablePointerLine;
            @EnablePointerLine.performed -= instance.OnEnablePointerLine;
            @EnablePointerLine.canceled -= instance.OnEnablePointerLine;
            @IncreaseShotPower.started -= instance.OnIncreaseShotPower;
            @IncreaseShotPower.performed -= instance.OnIncreaseShotPower;
            @IncreaseShotPower.canceled -= instance.OnIncreaseShotPower;
            @Shoot.started -= instance.OnShoot;
            @Shoot.performed -= instance.OnShoot;
            @Shoot.canceled -= instance.OnShoot;
        }

        public void RemoveCallbacks(IMainActions instance)
        {
            if (m_Wrapper.m_MainActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMainActions instance)
        {
            foreach (var item in m_Wrapper.m_MainActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MainActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MainActions @Main => new MainActions(this);
    public interface IMainActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnRaiseScope(InputAction.CallbackContext context);
        void OnTurnLeft(InputAction.CallbackContext context);
        void OnTurnRight(InputAction.CallbackContext context);
        void OnDontMove(InputAction.CallbackContext context);
        void OnLongJump(InputAction.CallbackContext context);
        void OnHighJump(InputAction.CallbackContext context);
        void OnEnablePointerLine(InputAction.CallbackContext context);
        void OnIncreaseShotPower(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
}
